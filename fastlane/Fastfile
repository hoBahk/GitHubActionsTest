# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

# API_KEY_ID = ENV["API_KEY_ID"]
# API_ISSUER_ID = ENV["API_ISSUER_ID"]
# API_PRIVATE_KEY = ENV["API_PRIVATE_KEY"]

KEYCHAIN_NAME = "keychain_Test"
KEYCHAIN_PASSWORD = "doinglab1011"

platform :ios do
  desc "Description of what the lane does"
  lane :app_build do

  #   create_keychain(
  #     name: KEYCHAIN_NAME,
  #     password: KEYCHAIN_PASSWORD,
  #     default_keychain: true,
  #     unlock: true,
  #     timeout: 3600,
  #     lock_when_sleeps: false
  #   )

  #   match(
  #     keychain_name: KEYCHAIN_NAME,
  #     keychain_password: KEYCHAIN_PASSWORD,
  #     readonly: true
  #  )

#    swiftlint(
#      mode: :lint,
#      raise_if_swiftlint_error: true,
#      ignore_exit_status: true
#    )
# cocoapods(
#   clean: true,
#   use_bundle_exec: false
# )


    gym(
      xcargs: "-allowProvisioningUpdates",
      workspace: "GitHubActionsTest.xcworkspace",
      scheme: "GitHubActionsTest"
    )

    # delete_keychain(
    #   name: "keychainMatch"
    # )

  end


  lane :upload_testflight do

    increment_build_number

    app_build

    app_store_connect_api_key(
      key_id: ENV["API_KEY_ID"],
      issuer_id: ENV["API_ISSUER_ID"],
      key_content: ENV["API_PRIVATE_KEY"]
    )

    upload_to_testflight

#    version = get_version_number
#    noti_slack({"version": version })
  end

  lane :increment_build_number_do do

    # increment_build_number
increment_build_number_in_plist

  end


  # lane이 모두 완료된 뒤 호출됨
  after_all do |lane|
  # 9. 배포 결과 슬랙 노티 🚨
    # slack_after_lane(
    #   message: "✈️ TestFlight에 성공적으로 업로드 되었습니다. ✈️",
    #   payload: {
    #     "Date" => Time.new.to_s
    #   },
    #   default_payloads: [:test_result, :lane, :git_branch, :git_author, :last_git_commit, :last_git_commit_hash]
    # )
  end

  # 에러 발생 시 호출 됨
  error do |lane, exception|
    # slack_when_error_occured(
    #   message: "🚨 실패하였습니다. 🚨”,
    #   payload: {
    #     "Version" => lane_context[SharedValues::VERSION_NUMBER],
    #     "Build number" => lane_context[SharedValues::BUILD_NUMBER],
    #     "Date" => Time.new.to_s,
    #     "Error Info" => exception.message"
    #   }
    # )

    # slack(
    #   message: "🚨 Failed build and archive.🚨",
    #   channel: "bh.bahk",
    #   success: true,
    #   payload: {
    #     "Build Date" => Time.new.to_s,
    #     "Error Info" => exception.message
    #   },
    #   default_payloads: [:test_result, :lane, :git_branch, :git_author, :last_git_commit, :last_git_commit_hash]
    # )
  end
end
